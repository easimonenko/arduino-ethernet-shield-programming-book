[\[К началу\]](/readme.markdown)

---

# Класс Stream

Класс _Stream_ является базовым для символьных и бинарных потоков и наследует от класса
_Print_. Класс _Stream_ является абстракным, наследующие ему классы должны реализовать
следующие методы:

``` arduino
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;
```

Также класс предоставляет собственные методы, но при этом не реализует метод _write()_,
который должен быть реализован в наследующих от него классах.

Рассмотрим методы класса _Stream_ подробнее.

## Конструктор Stream()

Конструктор _Stream()_ задаёт таймаут для потоковых операций продолжительностью 1000 мс
(1 сек). Напрямую этот конструктор не вызывается, так как невозможно создание экземпляров
класса _Stream_.

## Метод available()

Метод _available()_ возвращает количество доступных для чтения из потока байт.

Этот метод должен быть реализован в наследуемом классе.

## Метод read()

Метод _read()_ возвращает первый байт из доступных для чтения. Если читать нечего, то
возвращается -1. Обратите внимание, что метод имеет тип int, то есть возвращает
16-разрядное значение, но из этих 16 разрядов значимые только младшие 8,
если только это не -1.

Этот метод должен быть реализован в наследуемом классе.

## Метод peek()

Метод _peak()_ возвращает первый байт из доступных для чтения, но в отличие от _read()_
продвижение к следующему байту не происходит, то есть повторные вызовы peak() будут
возвращать то же самое значение.

Этот метод должен быть реализован в наследуемом классе.

## Метод flush()

Метод _flush()_ вызывает очистку буфера от уже отправленых данных.

Этот метод должен быть реализован в наследуемом классе.

## Метод setTimeout()

Метод _setTimeout()_ позволяет таймаут для потоковых операций. Метод получает на вход
целое беззнаковое 32-разрядное значение.

``` arduino
    void setTimeout(unsigned long timeout);
```

...

---

Смотри также:

* [Класс Print](/print-class.markdown)

---

[\[К началу\]](/readme.markdown)

---

(c) 2015, Симоненко Евгений А. <easimonenko@mail.ru>
